import os
import asyncio
from dotenv import load_dotenv

from core.meme_generator import MemeGenerator

# Charger les variables d'environnement
load_dotenv()

# Sujet par d√©faut pour la g√©n√©ration de punchlines
DEFAULT_SUBJECT = "L'arrogance des d√©veloppeurs"

async def main():
    """
    Fonction principale qui g√©n√®re un m√®me vid√©o 'L'ARROGANCE!' √† chaque ex√©cution
    """
    try:
        print("üé¨ D√©marrage du g√©n√©rateur de m√®mes 'L'ARROGANCE!'...")
        
        # Initialiser le g√©n√©rateur de m√®mes
        meme_generator = MemeGenerator()
        
        # G√©n√©rer le m√®me avec le sujet par d√©faut
        result = await meme_generator.generate_meme(subject=DEFAULT_SUBJECT)
        
        print(f"‚úÖ M√®me g√©n√©r√© avec succ√®s!")
        print(f"üìù Texte: {result['text']}")
        print(f"üé• Vid√©o: {result['video_path']}")
        
        return result
    except Exception as e:
        print(f"‚ùå Erreur lors de la g√©n√©ration du m√®me: {str(e)}")
        raise e

if __name__ == "__main__":
    # Ex√©cuter la fonction principale de mani√®re asynchrone
    result = asyncio.run(main()) 